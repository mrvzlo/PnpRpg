@page
@using Pnprpg.DomainService.Models
@using Pnprpg.WebCore.Helpers
@model EditModel
@{
    ViewData["Title"] = Model.Input.Id == 0 ? "Новый класс" : Model.Input.Name;
    ViewData["UrlBack"] = Url.CustomPage(SitePages.MajorEditorBranchesIndex);
    var hasBonuses = Model.Bonuses != null && Model.Bonuses.Any();
}
<form class="col-lg-6 col-12 mx-auto" method="post">
    @Html.ValidationSummary(true)
    @Html.HiddenFor(x => x.Input.Id)
    @Html.AntiForgeryToken()
    <div class="row">
        @Html.EditorFor(x => x.Input.Name, new { blockClass = "col-md-6" })
        @Html.EditorFor(x => x.Input.Color, new { blockClass = "col-md-6", fieldClass= "color-picker" })
        @Html.EditorFor(x => x.Input.ShortDescription, "Description")
        @Html.EditorFor(x => x.Input.Description, "Description", new { fieldClass= "html-editor" })
    </div>
    @if (hasBonuses)
    {
        <button type="button" class="btn btn-outline-primary clone-btn"
                data-container="#hr" data-style="prepend" data-target=".default-bonus">
            Добавить бонус
        </button>
    }
    else
    {
        <div class="alert alert-danger">Нет доступных бонусов</div>
    }
    @if (Model.Bonuses != null && Model.Input.Bonuses != null)
    {
        var i = 0;
        foreach (var bonus in Model.Input.Bonuses)
        {
            var queryItem = new FormQueryItem(Model.Bonuses, i++, bonus);
            @await Html.PartialAsync("Editor/Selects/_BonusSelect", queryItem)
        }
    }
    <hr id="hr" />
    <button type="submit" class="btn btn-success">Сохранить</button>
</form>

@if (hasBonuses)
{
    <div class="d-none default-bonus">
        @{
            var defaultModel = new FormQueryItem(Model.Bonuses);
            @await Html.PartialAsync("Editor/Selects/_BonusSelect", defaultModel)
        }
    </div>
}