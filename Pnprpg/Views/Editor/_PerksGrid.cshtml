@using Boot.Enums
@using Boot.Helpers
@using Boot.Models.JsonModels
@model List<Boot.Models.JsonModels.Perk>

@(Html.Grid(Model).Build(columns =>
{
    columns.Add(x => x.Requirements.Single(y => y.Type == RequirementType.Level).Value).Titled("Уровень")
        .InitialSort(GridSortOrder.Asc);
    columns.Add(x => x.Name).Titled("Название");
    columns.Add(x => Requirements(x.Requirements.Where(y => y.Type != RequirementType.Level).ToList()))
        .Titled("Название").Css("w-25");
    columns.Add(x => x.Desc).Css("w-25").Titled("Эффект");
    columns.Add(x => Actions(x));
}).Empty("No data found").Pageable(pager =>
    {
        pager.RowsPerPage = 7;
    }).Css("table table-responsive"))

@helper Requirements(List<Requirement> reqs)
{
    foreach (var r in reqs)
    {
        switch (r.Type)
        {
            case RequirementType.Perk:
                @r.StrValue
                break;
            case RequirementType.Race:
                @:@r.Type.Description(): @r.StrValue
                break;
            case RequirementType.Stat:
                @:@r.StrValue: @r.Value
                break;
        }
        <br />
    }
    if (!reqs.Any())
    {
        @:Нет
    }
}

@helper Actions(Perk perk)
{
    <a href="@Url.Action("EditPerk", new {id = perk.Id})" class="btn btn-outline-info font-weight-bold">🖊️</a>
    <button class="btn confirm-btn btn-outline-danger" data-form="perkDeleteForm" data-field="PerkId" data-value="@perk.Id"
            data-text="Способность @perk.Name будет удалена">❌</button>
}