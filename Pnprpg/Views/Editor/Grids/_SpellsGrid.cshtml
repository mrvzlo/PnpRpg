@using NonFactors.Mvc.Grid
@using Pnprpg.DomainService.Models
@model IQueryable<Pnprpg.DomainService.Models.SpellViewModel>

@(Html.Grid(Model).Build(columns =>
{
    columns.Add(x => x.MagicSchoolName).RenderedAs(x => Html.Raw($"<div style='color: #{x.Color}'>{x.MagicSchoolName}</div>")).Titled("Школа")
        .Filterable(true).Sortable(true).Css("bg-dark").InitialSort(GridSortOrder.Asc);
    columns.Add(x => x.Name).Titled("Название");
    columns.Add(x => x.Effect).RenderedAs(x => Html.Raw(x.Damage > 0 ? string.Format(x.Effect, x.Damage) : x.Effect)).Titled("Эффект").Css("w-50");
    columns.Add(x => x.Level).Titled("Ур. школы").Css("no-wrap");
    columns.Add(x => x.Cost).Titled("Цена");
    columns.Add(x => Actions(x)).Css("no-wrap");
}).Empty("No data found").Pageable(pager =>
{
    pager.RowsPerPage = 12;
}).Css("table table-responsive"))

@helper Actions(SpellViewModel skillView)
{
    <a href="@Url.Action("EditSpell", new {id = skillView.Id})" class="btn btn-info fas fa-pen"></a>
    <button class="btn confirm-btn btn-danger fas fa-trash" data-form="deleteForm" data-field="ModelId" data-value="@skillView.Id"
            data-text="Навык @skillView.Name будет удалён"></button>
}
