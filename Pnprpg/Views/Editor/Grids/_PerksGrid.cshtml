@using NonFactors.Mvc.Grid
@using Pnprpg.DomainService.Models
@model IQueryable<Pnprpg.DomainService.Models.PerkViewModel>

@(Html.Grid(Model).Build(columns =>
{
    columns.Add(x => x.BranchView.Name).RenderedAs(x => Branch(x.BranchView)).Filterable(GridFilterType.Single).Css("bg-dark").Titled("Класс");
    columns.Add(x => x.Level).Titled("Уровень").Sortable(true).InitialSort(GridSortOrder.Asc);
    columns.Add(x => x.Name).Titled("Название").Css("w-25");
    columns.Add(x => x.Description).Titled("Эффект").Css("w-50");
    columns.Add(x => Actions(x));
}).Empty("No data found").Pageable(pager =>
{
    pager.RowsPerPage = 10;
}).Css("table table-responsive"))

@helper Branch(BranchViewModel branchView)
{
    <div style="color: #@branchView.Color">@branchView.Name</div>
}

@helper Actions(PerkViewModel perk)
{
    <div class="btn-group">
        <a href="@Url.Action("EditPerk", new {id = perk.Id})" class="btn btn-outline-info font-weight-bold">🖊️</a>
        <button class="btn confirm-btn btn-outline-danger" data-form="deleteForm" data-field="ModelId" 
                data-value="@perk.Id" data-text="Способность @perk.Name будет удалена">
            ❌
        </button>
    </div>
}
