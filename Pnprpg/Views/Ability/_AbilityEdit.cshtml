@using Pnprpg.DomainService.Enums
@using Pnprpg.DomainService.Models
@model HeroModel
@{
    var remaining = Model.Abilities.FreePoints();
}
<div id="status" class="w-100"></div>
@{ Html.RenderAction("Wizard", "HeroGen", new { status = HeroGenStatus.Abilities });}

@foreach (var ability in Model.Abilities.List)
{
    <div class="col-md-3 col-6">
        <div class="row border">
            @Html.DisplayFor(x => ability, "Ability")
            <div class="col-12 my-2">@ButtonGroup(ability, remaining)</div>
        </div>
    </div>
}

@helper ButtonGroup(AbilityModel stat, int remaining)
{
    <div class="btn-group">
        @Button(stat, remaining, -3, true)
        @Button(stat, remaining, -1, false)
        @Button(stat, remaining, 1, false)
        @Button(stat, remaining, 3, true)
    </div>
}

@helper Button(AbilityModel ability, int remaining, int value, bool onlyLg)
{
    var canChange = ability.FitsLimits(value) && remaining - value >= 0;

    var onlyLgClass = onlyLg ? "d-lg-block d-none" : "";
    <button class="btn @GetColor(canChange) @onlyLgClass ajax-btn" @(canChange ? "" : "disabled") data-action="@HeroGenStatus.Abilities"
            data-url="@Url.Action("UpdateAbility", "Ability", new {abilityId = ability.Id, value})">
        @(value > 0 ? $"+{value}" : $"{value}")
    </button>
}

@helper GetColor(bool can)
{
    @(can ? "btn-success" : "btn-secondary")
}

@Html.Partial("HeroInfo/_Stats", Model)

<div class="col-lg-4 col-md-6 col-12">
    <div class="alert alert-info my-3 py-2">Cвободных очков: @remaining</div>
    <button class="btn @(remaining == 0 ? "btn-success" : "btn-secondary") ajax-btn mw-160"
            data-url="@Url.Action("Result", "HeroGen")" @(remaining == 0 ? "" : "disabled")>
        Сохранить
    </button>
</div>