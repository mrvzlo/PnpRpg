@model Pnprpg.DomainService.Models.AlchemySummary

<h1 id="p3">Часть 3 Алхимия</h1>
<h5>Алхимические реагенты и реакции</h5>

<table class="table text-center" style="margin-left: 15%; margin-right: 5%; width: 30%; float: left;">
    <tr>
        <th>Символ</th>
        <th>Эссенция</th>
    </tr>
    @foreach (var r in Model.Reagents)
    {
        <tr>
            <td>@r.Symbol</td>
            <td>@r.Name</td>
        </tr>
    }
</table>


<table class="table text-center" style="margin-left: 5%; margin-right: 15%; width: 30%; float: right">
    <tr>
        <th>Символ</th>
        <th>Процесс</th>
    </tr>
    @foreach (var p in Model.Processes)
    {
        <tr>
            <td>@p.Symbol</td>
            <td>@p.Name</td>
        </tr>
    }
</table>
@for (var i = 0; i < 27; i++)
{<br/>}
<h5>Продукты реакций</h5>

<table class="table table-bordered">
    <tr>
        <td></td>
        @foreach (var process in Model.Processes.GroupBy(x => x.Value).Select(x => x.First()))
        {
            <th>@process.Name</th>
        }
    </tr>
    @foreach (var r in Model.Reagents.GroupBy(x => x.Value).Select(x => x.First()))
    {
        <tr>
            <th>@r.Name</th>
            @foreach (var process in Model.Processes.GroupBy(x => x.Value).Select(x => x.First()))
            {
                <td>
                    @{
                        var res = Model.Reactions.SingleOrDefault(x => x.Process == process.Value && x.Reagent == r.Value);
                        @(res == null ? "-" : res.Potion.Name)
                    }
                </td>
            }
        </tr>
    }
</table>