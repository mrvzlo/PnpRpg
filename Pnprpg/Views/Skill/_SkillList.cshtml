@using Pnprpg.DomainService.Models.Skills
@model HeroSkillGroup
@{
    var groups = Model.List.Select(x => x.GroupName).Distinct().ToList();
}
<div id="skillsCarousel" class="carousel row justify-content-center">
    <div class="carousel-inner col-lg-6 col-md-8 col-12 p-0">
        @for (var i=0; i<groups.Count; i++)
        {
            <div class="carousel-item @(i == Model.SelectedGroup ? "active" : "")">
                <table class="m-auto table table-sm">
                    <tr>
                        <th class="px-0">Атрибут</th>
                        <th class="w-75">@groups[i]</th>
                        <th>Цена</th>
                    </tr>
                    @foreach (var skill in Model.List.Where(x => x.GroupName == groups[i]))
                    {
                        <tr>
                            <td class="font-weight-bold badge text-white big-badge" style="background-color: #@skill.Ability.Color">
                                @skill.Ability.Symbol
                            </td>
                            <td>@skill.ToString()</td>
                            <td class="p-0">@(skill.Difficulty + 1)</td>
                            @if (Model.Editable)
                            {
                                var upgradeable = Model.IsUpdateable(skill);
                                var color = upgradeable ? "success" : "secondary";
                                <td>
                                    <button class="btn btn-@color btn-sm ajax-btn" data-container="skillList"
                                            data-url="@Url.Action("AddSkill", new{ group = i, id = skill.Id})"
                                            @(upgradeable ? "" : "disabled")>
                                        +1
                                    </button>
                                </td>
                            }
                        </tr>
                    }
                </table>

            </div>
        }
    </div>
    <div class="col-1 order-first d-none d-md-flex">
        <a class="carousel-control-prev order-first" href="#skillsCarousel" role="button" data-slide="prev">
            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
        </a>
    </div>
    <div class="col-1 d-none d-md-flex">
        <a class="carousel-control-next" href="#skillsCarousel" role="button" data-slide="next">
            <span class="carousel-control-next-icon" aria-hidden="true"></span>
        </a>
    </div>
    <div class="col-12">
        <ol class="carousel-indicators">
            @for (var i=0; i<groups.Count; i++)
            {
                <li data-target="#skillsCarousel" data-slide-to="@i" class="@(i== Model.SelectedGroup ? "active" : "")"></li>
            }
        </ol>
    </div>
</div>
@if (Model.Editable)
{
    var remaining = Model.Limit - Model.TotalSpentPoints();
    <div class="alert alert-info col-lg-4 col-md-6 col-12 mx-auto py-2">Свободных очков навыков: @remaining</div>
    <button class="btn btn-primary mw-260 ajax-btn m-1" data-url="@Url.Action("ResetSkills")" data-container="skillList">
        ↺ Перераспределить
    </button>
    <button class="btn btn-@(remaining == 0 ? "success" : "secondary") mw-260 ajax-btn m-1"
            data-url="@Url.Action("Result", "HeroGen")" @(remaining == 0 ? "" : "disabled")>
        ✓ Сохранить
    </button>
}