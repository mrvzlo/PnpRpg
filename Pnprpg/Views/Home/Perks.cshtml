@using Boot.Enums
@using Boot.Helpers
@model List<Boot.Models.JsonModels.Perk>
@{
    var maxLevel = (int)ViewBag.MaxLevel;
    ViewBag.Title = "Способности";
}
@if (AccessHelper.UserInRole(Request, User, UserRole.Editor))
{
    <div class="col-12">
        @Html.ActionLink("Редактировать", "Perks", "Editor", null, new { @class = "btn btn-warning float-right" })
    </div>
}
<div class="nav nav-tabs col-12 my-sm-2 px-2 px-sm-3 justify-content-center">
    @for (var i = 0; i < maxLevel; i++)
    {
        <a class="btn btn-primary mx-1 @(i == 0 ? "active" : "")" data-toggle="tab" href="#group_@i">
            <span class="d-none d-md-inline">Уровень</span>
            @(i + 1)
        </a>
    }
</div>
<div class="tab-content col-md-6 col-sm-6 col-12 text-left row order-sm-last">
    @foreach (var perk in Model)
    {
        <div class="tab-pane fade" id="perk_@perk.Id">
            <div class="h4">@perk.Name</div>
            <div class="mb-2">@perk.Desc</div>
            <div>
                Требования:
                <ul>
                    @foreach (var r in perk.Requirements.Where(x => x.Type != RequirementType.Level))
                    {
                        switch (r.Type)
                        {
                            case RequirementType.Perk:
                                <li>
                                    @(r.Type.Description()): @r.StrValue
                                </li>
                                break;
                            case RequirementType.Race:
                                <li>
                                    @(r.Type.Description()): @r.StrValue
                                </li>
                                break;
                            case RequirementType.Stat:
                                <li>
                                    @r.StrValue: @r.Value
                                </li>
                                break;

                        }
                    }
                    @if (perk.Requirements.All(x => x.Type == RequirementType.Level))
                    {
                        @:Нет
                    }
                </ul>
            </div>
            <hr />
        </div>
    }
</div>
<div class="tab-content col-md-3 col-sm-5 col-12 text-left px-2 px-sm-0">
    @for (var i = 0; i < maxLevel; i++)
    {
        <div class="tab-pane fade @(i == 0 ? "show active" : "")" id="group_@i">
            <div class="nav nav-tabs flex-column">
                @foreach (var perk in Model.Where(x => x.Requirements.Single(y => y.Type == RequirementType.Level).Value == i + 1))
                {
                    <a class="btn btn-light m-1 border" data-toggle="tab" href="#perk_@perk.Id">@perk.Name</a>
                }
            </div>
        </div>
    }
</div>
<div class="col-md-3 col-sm-1 col-12 order-first order-sm-2"></div>