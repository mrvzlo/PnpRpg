@using Boot.Helpers
@model List<Boot.Models.JsonModels.Weapon>
@{
    ViewBag.Title = "Оружейная";
    var levels = Model.Select(x => x.Level).Distinct();
    var colors = new[] { "danger", "danger", "danger", "danger" };
}

<div class="nav nav-tabs col-12 mt-md-2 row justify-content-center">
    @foreach (var level in levels)
    {
        <a class="btn border mx-1 btn-@colors[level-1]" data-toggle="tab" href="#level_@level">
            <span class="d-inline d-sm-none">@level</span>
            <span class="d-none d-sm-inline">@level уровень</span>
        </a>
    }
</div>

<div class="tab-content col-12">
    @foreach (var level in levels)
    {
        <div class="tab-pane fade @(level == 1 ? "show active" : "")" id="level_@level">
            <table class="table">
                <tr>
                    <th>Название</th>
                    <th>Навык</th>
                    <th>Вес</th>
                    <th>Бонусы</th>
                </tr>
                @foreach (var weapon in Model.Where(x => x.Level == level))
                {
                    <tr>
                        <td class="font-weight-bold">@weapon.Name</td>
                        <td class="alert-@weapon.Skill.Stat.Color()">@StringHelper.FormatToSentence(weapon.Skill.Name)</td>
                        <td>@weapon.Weight кг</td>
                        <td>
                            @if (weapon.Effects != null)
                            {
                                foreach (var effect in weapon.Effects)
                                {
                                    <span data-toggle="tooltip" data-placement="bottom" title="@effect.Description()">
                                        @effect.Translation()
                                    </span>
                                }
                            }
                        </td>
                    </tr>
                }
            </table>
        </div>
    }
</div>