@using Boot.Enums
@using Boot.Helpers
@model Boot.Models.HeroModel
@{
    var freePoints = Model.Stats.Length * 10 - Model.Stats.Sum();
    for (var i = 0; i < Model.Stats.Length; i++)
    {
        var a = (StatType)i;
        <div class="col-md-3 col-6 card p-0">
            <div class="card-header bg-@a.Color()">@a.Translation()</div>
            <div class="card-body">@Model.Stats[i]</div>
            <div class="card-footer">@ButtonGroup(Model.Stats[i], a, Model.MinAttr, freePoints)</div>
        </div>
    }
    @Html.Partial("_SecondStats", Model)
    <div class="col-md-4 col-12 input-group">
        <div class="alert alert-info m-0 input-group-prepend">Cвободных очков: @freePoints</div>
        <div class="input-group-append">
            <button class="btn @(freePoints == 0 ? "btn-success" : "btn-secondary") ajax-btn" data-action="@Status.Skills"
                    data-url="@Url.Action("GetSkills")" @(freePoints == 0 ? "" : "disabled")>
                Ок
            </button>
        </div>
    </div>

}

@helper ButtonGroup(int param, StatType stat, int minValue, int freePoints)
{
    <div class="btn-group">
        @Button(param, stat, -3, minValue, freePoints, true)
        @Button(param, stat, -1, minValue, freePoints, false)
        @Button(param, stat, 1, minValue, freePoints, false)
        @Button(param, stat, 3, minValue, freePoints, true)
    </div>
}

@helper Button(int param, StatType stat, int value, int minValue, int freePoints, bool onlyLg)
{
    bool canChange;
    if (value > 0)
    {
        canChange = param + value <= Constants.MaxStat && freePoints - value >= 0;
    }
    else
    {
        canChange = param + value >= minValue;
    }
    var onlyLgClass = onlyLg ? "d-lg-block d-none" : "";
    <button class="btn @GetColor(canChange) @onlyLgClass ajax-btn" @(canChange ? "" : "disabled") data-action="@Status.Stats"
            data-url="@Url.Action("ChangeStat", new {stat, value})">
        @(value > 0 ? $"+{value}" : $"{value}")
    </button>
}

@helper GetColor(bool can)
{
    @(can ? "btn-success" : "btn-secondary")
}